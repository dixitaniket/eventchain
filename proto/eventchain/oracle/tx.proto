syntax = "proto3";

package eventchain.oracle;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/dixitaniket/eventchain/x/oracle/types";

// Msg defines the Msg service.
service Msg {
  rpc PostResult (MsgPostResult) returns (MsgPostResultResponse);
  rpc ProposeWhitelist(MsgProposeWhitelist) returns (MsgProposeWhitelistResponse);
}
message MsgPostResult {
  string creator = 1;
  Result result =2 [(gogoproto.nullable)=false];
  int64 chainHeight = 3;
  int64 blockHeight = 4;
}

message Result {
  int64 num  = 1;
  int64 toadd = 2;
}

message MsgPostResultResponse {}

message MsgProposeWhitelist {
  option (gogoproto.equal)            = true;
  option (cosmos.msg.v1.signer)       = "authority";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string title = 2;
  string description = 3;
  repeated string whitelistOperator = 4;
}

message MsgProposeWhitelistResponse {}

message FinalResult{
  int64 result = 1;
  int64 height = 2;
}