syntax = "proto3";

package eventchain.oracle;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eventchain/oracle/params.proto";

option go_package = "github.com/dixitaniket/eventchain/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/eventchain/oracle/params";
  
  }
  
  // Queries a list of Result items.
  rpc Result (QueryResultRequest) returns (QueryResultResponse) {
    option (google.api.http).get = "/eventchain/oracle/result";
  
  }
  
  // Queries a list of Whitelist address.
  rpc Whitelist (QueryWhitelistRequest) returns (QueryWhitelistResponse) {
    option (google.api.http).get = "/eventchain/oracle/whitelist";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryResultRequest {}

message QueryResultResponse {
  int64 result      = 1;
  int64 blockHeight = 2;
}

message QueryWhitelistRequest {}

message QueryWhitelistResponse {
  repeated string whitelist = 1;
}
